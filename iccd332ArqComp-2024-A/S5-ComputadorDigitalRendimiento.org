#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+options: author:t broken-links:nil c:nil creator:nil
#+options: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:t
#+options: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+options: timestamp:t title:t toc:t todo:t |:t
#+title: S5-ComputadorDigitalRendimiento
#+date:  2024-05-21
#+author: Lenin G. Falconí
#+email: lenin.falconi@epn.edu.ec
#+language: es
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 27.1 (Org mode 9.3)
#+latex_class: beamer
#+columns: %45ITEM %10BEAMER_env(Env) %10BEAMER_act(Act) %4BEAMER_col(Col) %8BEAMER_opt(Opt)
#+beamer_theme: Madrid
#+beamer_color_theme:
#+beamer_font_theme:
#+beamer_inner_theme:
#+beamer_outer_theme:
#+beamer_header:

* Evolución Computador Digital
** Estructura Multi-Núcleo
*** Estructura Multi-Núcleo
- Los computadores actuales disponen de /múltiples procesadores/
- Una unidad de procesamiento tiene su unidad de control, ALU,
  registros y tal vez /cache/
- **Core (Núcleo):** es una unidad de procesamiento individual en un
  chip. Es equivalente al CPU en un sistema de un sólo CPU
- CPU: parte del computador encargada de **captar (i.e. fetch)** y
  **ejecutar** instrucciones. Contiene la ALU, registros, unidad de
  control

** Computador IAS
*** Computador IAS
- La idea de diseño: /stored-program concept/
- Idea de diseño de Von Neuman
- Consiste de una estructura conformada por:
  - Memoria Principal: guarda los datos y las instrucciones
  - ALU: operaciones binarias sobre los datos
  - Unidad de control: interpreta las instrucciones de la memoria y las ejecuta
  - E/S: interfaz de entradas y salidas

** Instruction Set Architecture
*** Instruction Set Architecture
** Evolución del Computador y Ley de Moore
*** Evolución del Computador y Ley de Moore

**** Texto                                                       :text:BMCOL:
     :PROPERTIES:
     :BEAMER_col: 0.4
     :END:
- El número de transistores en un chip se duplica cada año
- En 1970 el ritmo se ralentiza a cada 18 meses
- El costo de un chip se ha mantenido sin cambios
- Una densidad mayor de componentes implica caminos eléctricos más
  cortos, incrementando el desempeño

**** Imagen                                                    :imagen:BMCOL:
     :PROPERTIES:
     :BEAMER_col: 0.6
     :END:
[[./images/MooreLaw.png]]
** Tipos de Computadores
*** Tipos de Computadores:
- Intel X86
- Arm 
- Sistemas Embebidos

** Medidas de Desempeño
*** Ley de Amdahl
- Trata de medir las potenciales ganancias en velocidad al pasar de un
  programa que usa procesadores múltiples comparados con procesadores
  sencillos:

  \begin{equation}
   Speedup = \frac{TiempoSP}{TiempoNPP}
  \end{equation}

 \begin{equation}
   Speedup = \frac{1}{(1-f)+\frac{f}{N}}
  \end{equation}

- Indica que el software debe ser adaptado para la ejecución en
  paralelo para aprovechar el poder del procesamiento en paralelo
- Puede ser generalizada para comparar cualquier mejora técnica en el
  diseño de los computadores.

*** Velocidad del Reloj
    :PROPERTIES:
    :BEAMER_opt: allowframebreaks
    :END:

- El computador usa un reloj para ejecutar sus operaciones
  (e.g. captación, decodificación, artimética, etc.)
- Son señales sinusoidales generadas por un reloj de cuarzo que son
  digitalizadas en tren de pulsos.
- La velocidad de un computador está determinada por la frecuencia del
  reloj en Hertz (Hz)
- **Tiempo de ciclo:** El tiempo entre pulsos del reloj
- La mayoría de instrucciones en un computador requeiren de varios
  **ciclos del reloj** para completarse
- Cuando las instrucciones se ejecutan en *pipelining*, múltiples
  instrucciones se ejecutan simultáneamente.
- La comparación de relojes entre dos máquinas $M_1$ y $M_2$ no es
  suficiente para evaluar el desempeño.

  \begin{equation}
   \tau = \frac{1}{f}
  \end{equation}

  \begin{equation}
   CT = \frac{1}{f}
  \end{equation}

- CT: tiempo de ciclo  y $f$ frecuencia del reloj
- CC: número de ciclos de reloj que la CPU usa para ejecutar una tarea
- $I_c$: número de ejecuciones de instrucciones

*** CPU Time

Se obtiene como el producto del número de ciclos $CC$ y el tiempo de
ciclo $CT$


\begin{equation}
CPU_\tau = CC \times CT
\end{equation}

Sin embargo, no es práctico realizar la cuenta exacta de ciclos de
reloj que usa un programa al realizar una tarea. Por esta razón se
prefiere usar el *Promedio de ciclos de reloj por Instruction* o
*Instruction Execution Rate* $CPI$

*** Instruction Execution Rate CPI
    :PROPERTIES:
    :BEAMER_opt: allowframebreaks
    :END:
- Si todas las instrucciones utilizara el mismo número de ciclos, CPI
  sería una constante del computador.
- El número de ciclos del reloj varía dependiendo de la instrucción.
- Sea $CPI_i$ el número de ciclos requeridos para ejecutar una
  instrucción tipo $i$, y sea $I_i$ el número de instrucciones
  ejecutadas de tipo $i$, entonces el *promedio de ciclos de reloj por
  instrucción* es:

  \begin{equation}
  CPI = \frac{\sum_{i=1}^n(CPI_i \times I_i)}{I_c}
  \end{equation}
- El tiempo $T$ que un procesador requiere para ejecutar un programa
  se puede expresar como:
  \begin{equation}
  T = I_c \times CPI \times \tau
  \end{equation}

*** MIPs y Flops
- *MIPs* corresponde a la expresión de la tasa de ejecución de instrucciones
expresada en millones de instrucciones por segundo

\begin{equation}
MIPs_{rate} = \frac{I_c}{T\times 10^6}=\frac{f}{CPI \times 10^6}
\end{equation}

- *MFlops* corresponde a la medida de desempeño relacionada únicamente
  con instrucciones de punto flotante.
  \begin{equation}
  MFLOPS_{rate} = \frac{Número\,de\,operaciones\,de\, punto\,flotante}{T\times 10^6}
  \end{equation}

*** Ejemplo
    :PROPERTIES:
    :BEAMER_opt: allowframebreaks
    :END:

La ejecución de un programa resulta en la ejecución de 2 millones de
instrucciones en un procesador de 400 MHz. El programa consiste de 4
tipos principales de instrucciones como se indica en la Tabla. Obtenga
el $CPI$ promedio y la tasa de MIPs

+--------------------+--------+--------------------+
|Tipo de Instruccion | CPI    |Mix de Instrucciones|
+--------------------+--------+--------------------+
| Aritmética y Lógica|  1     |           60%      |
+--------------------+--------+--------------------+
| Carga de dato      |  2     |           18%      |
+--------------------+--------+--------------------+
| Salto              |  4     |           12%      |
+--------------------+--------+--------------------+
| Referencia Memoria |  8     |           10%      |
+--------------------+--------+--------------------+

$$CPI=1\times 0.6+ 2\times 0.18 + 4 \times 0.12 + 8\times 0.1 = 2.24$$

$$MIPS=\frac{400 \times 10^6}{2.24\times 10^6} \approx 178$$
